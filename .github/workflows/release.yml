name: Release Binary

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  release:
    types: [prereleased, released]
  workflow_dispatch:
    inputs:
      ref_name:
        description: Release Version
        required: true
      release:
        required: true
        type: boolean

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.24

    - run: |
        echo "VERSION=${{ (github.ref_name == 'main' && github.event_name == 'workflow_dispatch') && github.event.inputs.ref_name || github.ref_name }}" >> $GITHUB_ENV

    - name: Compile HEPAgent ${{ matrix.goarch }}
      run: |
        go mod tidy
        go build --ldflags '-linkmode=external -extldflags=-static' -o gigapi_querier ./

    - name: glibc polyfill
      if: ${{ matrix.goarch == 'amd64' }}
      run: |
        CONTAINER_ID=$(docker create ghcr.io/lmangani/polyfill-glibc-action:latest) 
        docker cp $CONTAINER_ID:/usr/local/bin/polyfill-glibc ./polyfill-glibc
        docker rm $CONTAINER_ID
        chmod +x ./polyfill-glibc
        ./polyfill-glibc --target-glibc=2.17 ./gigapi_querier

    - name: Upload release
      if:  github.event_name == 'release' || ${{ inputs.release }}
      uses: boxpositron/upload-multiple-releases@1.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_config: |
            gigapi_querier
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: false
        overwrite: true

  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    steps:
     - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.3.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.8.0
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          latest
          ${{ (github.event_name == 'workflow_dispatch') && github.event.inputs.ref_name || github.ref_name }}
          
    - name: Build and push
      uses: docker/build-push-action@v6.13.0
      with:
        context: .
        file: Dockerfile
        push: ${{ (github.event_name == 'workflow_dispatch') && github.event.inputs.release || github.event_name == 'release' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        overwrite: true
